function Banner(){this.bannerGroup=$("#banner-group"),this.index=1,this.leftArrow=$("#left-arrow"),this.rightArrow=$("#right-arrow"),this.bannerUl=$("#banner-ul"),this.bannerulWidth=798,this.bannerList=this.bannerUl.children("li"),this.bannerCount=this.bannerList.length,this.pageControl=$(".page-control")}Banner.prototype.initBanner=function(){var n=this,t=n.bannerList.eq(0).clone(),e=n.bannerList.eq(n.bannerCount-1).clone();n.bannerUl.append(t),n.bannerUl.prepend(e),n.bannerUl.css({width:n.bannerulWidth*(n.bannerCount+2),left:-n.bannerulWidth})},Banner.prototype.initPageControl=function(){var n=this;for(i=0;i<this.bannerCount;i++){var t=$("<li></li>");n.pageControl.append(t),0===i&&t.addClass("active")}n.pageControl.css({width:12*n.bannerCount+20+20*(n.bannerCount-1)})},Banner.prototype.listenPageControl=function(){var e=this;e.pageControl.children("li").each(function(n,t){$(t).click(function(){e.index=n,e.animate()})})},Banner.prototype.animate=function(){var n=this;n.bannerUl.animate({left:-798*n.index},500);var t=n.index;t=0===t?n.bannerCount-1:t===n.bannerCount+1?0:n.index-1,n.pageControl.children("li").eq(t).addClass("active").siblings().removeClass("active")},Banner.prototype.toggleArrow=function(n){n?(this.leftArrow.show(),this.rightArrow.show()):(this.leftArrow.hide(),this.rightArrow.hide())},Banner.prototype.listenArrowClick=function(){var n=this;n.leftArrow.click(function(){0===n.index?(n.bannerUl.css({left:-n.bannerulWidth*n.bannerCount}),n.index=n.bannerCount-1):n.index--,n.animate()}),n.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUl.css({left:-n.bannerulWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUl.css({left:-n.bannerulWidth}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.run=function(){this.loop(),this.listenBannerHover(),this.listenArrowClick(),this.initPageControl(),this.initBanner(),this.listenPageControl()},$(function(){(new Banner).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
