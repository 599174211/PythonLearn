function Banner(){this.bannerGroup=$("#banner-group"),this.index=1,this.leftArrow=$("#left-arrow"),this.rightArrow=$("#right-arrow"),this.bannerUl=$("#banner-ul"),this.bannerulWidth=798,this.bannerList=this.bannerUl.children("li"),this.bannerCount=this.bannerList.length,this.pageControl=$(".page-control")}Banner.prototype.initBanner=function(){var n=this,t=n.bannerList.eq(0).clone(),e=n.bannerList.eq(n.bannerCount-1).clone();n.bannerUl.append(t),n.bannerUl.prepend(e),n.bannerUl.css({width:n.bannerulWidth*(n.bannerCount+2),left:-n.bannerulWidth})},Banner.prototype.initPageControl=function(){var n=this;for(i=0;i<this.bannerCount;i++){var t=$("<li></li>");n.pageControl.append(t),0===i&&t.addClass("active")}n.pageControl.css({width:12*n.bannerCount+20+20*(n.bannerCount-1)})},Banner.prototype.listenPageControl=function(){var e=this;e.pageControl.children("li").each(function(n,t){$(t).click(function(){e.index=n+1,e.animate()})})},Banner.prototype.animate=function(){var n=this;n.bannerUl.animate({left:-798*n.index},500);var t=n.index;t=0===t?n.bannerCount-1:t===n.bannerCount+1?0:n.index-1,n.pageControl.children("li").eq(t).addClass("active").siblings().removeClass("active")},Banner.prototype.toggleArrow=function(n){n?(this.leftArrow.show(),this.rightArrow.show()):(this.leftArrow.hide(),this.rightArrow.hide())},Banner.prototype.listenArrowClick=function(){var n=this;n.leftArrow.click(function(){0===n.index?(n.bannerUl.css({left:-n.bannerulWidth*n.bannerCount}),n.index=n.bannerCount-1):n.index--,n.animate()}),n.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUl.css({left:-n.bannerulWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUl.css({left:-n.bannerulWidth}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.run=function(){this.loop(),this.listenBannerHover(),this.listenArrowClick(),this.initPageControl(),this.initBanner(),this.listenPageControl()},$(function(){(new Banner).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJhbm5lciIsInRoaXMiLCJiYW5uZXJHcm91cCIsIiQiLCJpbmRleCIsImxlZnRBcnJvdyIsInJpZ2h0QXJyb3ciLCJiYW5uZXJVbCIsImJhbm5lcnVsV2lkdGgiLCJiYW5uZXJMaXN0IiwiY2hpbGRyZW4iLCJiYW5uZXJDb3VudCIsImxlbmd0aCIsInBhZ2VDb250cm9sIiwicHJvdG90eXBlIiwiaW5pdEJhbm5lciIsInNlbGYiLCJmcmlzdEJhbm5lciIsImVxIiwiY2xvbmUiLCJsYXN0QmFubmVyIiwiYXBwZW5kIiwicHJlcGVuZCIsImNzcyIsIndpZHRoIiwibGVmdCIsImluaXRQYWdlQ29udHJvbCIsImkiLCJjaXJjbGUiLCJhZGRDbGFzcyIsImxpc3RlblBhZ2VDb250cm9sIiwiZWFjaCIsIm9iaiIsImNsaWNrIiwiYW5pbWF0ZSIsInNpYmxpbmdzIiwicmVtb3ZlQ2xhc3MiLCJ0b2dnbGVBcnJvdyIsImlzU2hvdyIsInNob3ciLCJoaWRlIiwibGlzdGVuQXJyb3dDbGljayIsImxpc3RlbkJhbm5lckhvdmVyIiwiaG92ZXIiLCJjbGVhckludGVydmFsIiwidGltZXIiLCJsb29wIiwic2V0SW50ZXJ2YWwiLCJydW4iXSwibWFwcGluZ3MiOiJBQVdBLFNBQVNBLFNBQ0xDLEtBQUtDLFlBQWNDLEVBQUUsaUJBQ3JCRixLQUFLRyxNQUFRLEVBQ2JILEtBQUtJLFVBQVlGLEVBQUUsZUFDbkJGLEtBQUtLLFdBQVlILEVBQUUsZ0JBQ25CRixLQUFLTSxTQUFXSixFQUFFLGNBQ2xCRixLQUFLTyxjQUFnQixJQUNyQlAsS0FBS1EsV0FBYVIsS0FBS00sU0FBU0csU0FBUyxNQUN6Q1QsS0FBS1UsWUFBY1YsS0FBS1EsV0FBV0csT0FDbkNYLEtBQUtZLFlBQWNWLEVBQUUsaUJBTXpCSCxPQUFPYyxVQUFVQyxXQUFZLFdBQ3pCLElBQUlDLEVBQU9mLEtBQ1BnQixFQUFjRCxFQUFLUCxXQUFXUyxHQUFHLEdBQUdDLFFBQ3BDQyxF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bmRleC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmdW5jdGlvbiBCYW5uZXIoKSB7XHJcbi8vICAgICBjb25zb2xlLmxvZygnaGVsbG8nKTtcclxuLy8gICAgIHRoaXMucGVyc29uID0gJ3hpYW93YW5nJ1xyXG4vLyB9XHJcbi8vIEJhbm5lci5wcm90b3R5cGUuZ2V0QmFubmVyID0gZnVuY3Rpb24od29yZCl7XHJcbi8vICAgICBjb25zb2xlLmxvZyh3b3JkKTtcclxuLy8gfTtcclxuLy8gdmFyIGJhbm5lciA9IG5ldyBCYW5uZXIoKTtcclxuLy8gY29uc29sZS5sb2coYmFubmVyLnBlcnNvbik7XHJcbi8vIGJhbm5lci5nZXRCYW5uZXIoJ25paGFvYScpO1xyXG5cclxuZnVuY3Rpb24gQmFubmVyKCkge1xyXG4gICAgdGhpcy5iYW5uZXJHcm91cCA9ICQoXCIjYmFubmVyLWdyb3VwXCIpO1xyXG4gICAgdGhpcy5pbmRleCA9IDE7XHJcbiAgICB0aGlzLmxlZnRBcnJvdyA9ICQoXCIjbGVmdC1hcnJvd1wiKTtcclxuICAgIHRoaXMucmlnaHRBcnJvdz0gJChcIiNyaWdodC1hcnJvd1wiKTtcclxuICAgIHRoaXMuYmFubmVyVWwgPSAkKFwiI2Jhbm5lci11bFwiKTtcclxuICAgIHRoaXMuYmFubmVydWxXaWR0aCA9IDc5ODtcclxuICAgIHRoaXMuYmFubmVyTGlzdCA9IHRoaXMuYmFubmVyVWwuY2hpbGRyZW4oXCJsaVwiKTtcclxuICAgIHRoaXMuYmFubmVyQ291bnQgPSB0aGlzLmJhbm5lckxpc3QubGVuZ3RoO1xyXG4gICAgdGhpcy5wYWdlQ29udHJvbCA9ICQoXCIucGFnZS1jb250cm9sXCIpO1xyXG59XHJcblxyXG4vKipcclxuICog5Yid5aeL5YyWYmFubmVyXHJcbiAqL1xyXG5CYW5uZXIucHJvdG90eXBlLmluaXRCYW5uZXI9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgZnJpc3RCYW5uZXIgPSBzZWxmLmJhbm5lckxpc3QuZXEoMCkuY2xvbmUoKTtcclxuICAgIHZhciBsYXN0QmFubmVyID0gc2VsZi5iYW5uZXJMaXN0LmVxKHNlbGYuYmFubmVyQ291bnQgLTEgKS5jbG9uZSgpO1xyXG4gICAgc2VsZi5iYW5uZXJVbC5hcHBlbmQoZnJpc3RCYW5uZXIpO1xyXG4gICAgc2VsZi5iYW5uZXJVbC5wcmVwZW5kKGxhc3RCYW5uZXIpO1xyXG4gICAgc2VsZi5iYW5uZXJVbC5jc3Moe1wid2lkdGhcIjogc2VsZi5iYW5uZXJ1bFdpZHRoICogKHNlbGYuYmFubmVyQ291bnQgKyAyKSxcclxuICAgICAgIFwibGVmdFwiOiAtc2VsZi5iYW5uZXJ1bFdpZHRofSlcclxufTtcclxuXHJcbi8qKlxyXG4gKiDmmK/mjIflsI/lnIbngrnmjqfliLblmahcclxuICovXHJcbkJhbm5lci5wcm90b3R5cGUuaW5pdFBhZ2VDb250cm9sID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIGZvcihpID0gMDsgaSA8IHRoaXMuYmFubmVyQ291bnQ7IGkrKyl7XHJcbiAgICAgICAgdmFyIGNpcmNsZSA9ICQoXCI8bGk+PC9saT5cIik7XHJcbiAgICAgICAgc2VsZi5wYWdlQ29udHJvbC5hcHBlbmQoY2lyY2xlKTtcclxuICAgICAgICBpZihpID09PSAwKXtcclxuICAgICAgICAgICAgY2lyY2xlLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNlbGYucGFnZUNvbnRyb2wuY3NzKHtcIndpZHRoXCI6IHNlbGYuYmFubmVyQ291bnQgKiAxMiArIDEwICogMiArIChzZWxmLmJhbm5lckNvdW50LTEpICogMjB9KTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDnm5HlkKzljp/ngrnmjqfliLblmahcclxuICovXHJcbkJhbm5lci5wcm90b3R5cGUubGlzdGVuUGFnZUNvbnRyb2wgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5wYWdlQ29udHJvbC5jaGlsZHJlbihcImxpXCIpLmVhY2goZnVuY3Rpb24gKGluZGV4LCBvYmopIHtcclxuICAgICAgICAkKG9iaikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBzZWxmLmluZGV4ID0gaW5kZXggKyAxO1xyXG4gICAgICAgICAgICBzZWxmLmFuaW1hdGUoKTtcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufTtcclxuXHJcbi8qKlxyXG4gKiDmiafooYzova7mkq3lm77nmoTliqjnlLtcclxuICovXHJcbkJhbm5lci5wcm90b3R5cGUuYW5pbWF0ZT0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHNlbGYuYmFubmVyVWwuYW5pbWF0ZSh7XCJsZWZ0XCI6IC03OTggKiBzZWxmLmluZGV4fSwgNTAwKTtcclxuICAgIHZhciBpbmRleCA9IHNlbGYuaW5kZXg7XHJcbiAgICBpZihpbmRleCA9PT0gMCl7XHJcbiAgICAgICAgaW5kZXggPSBzZWxmLmJhbm5lckNvdW50IC0gMTtcclxuICAgIH1lbHNlIGlmIChpbmRleCA9PT0gc2VsZi5iYW5uZXJDb3VudCArIDEpe1xyXG4gICAgICAgIGluZGV4ID0gMDtcclxuICAgIH1lbHNlIHtcclxuICAgICAgICBpbmRleCA9IHNlbGYuaW5kZXggLSAxO1xyXG4gICAgfVxyXG4gICAgc2VsZi5wYWdlQ29udHJvbC5jaGlsZHJlbihcImxpXCIpLmVxKGluZGV4KVxyXG4gICAgICAgIC5hZGRDbGFzcyhcImFjdGl2ZVwiKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG5cclxufTtcclxuLyoqXHJcbiAqIOaOp+WItuW3puWPs+S4pOS4queureWktOeahOmakOiXj1xyXG4gKi9cclxuQmFubmVyLnByb3RvdHlwZS50b2dnbGVBcnJvdyA9IGZ1bmN0aW9uKGlzU2hvdyl7XHJcblxyXG4gICAgaWYoaXNTaG93KXtcclxuICAgICAgICB0aGlzLmxlZnRBcnJvdy5zaG93KCk7XHJcbiAgICAgICAgdGhpcy5yaWdodEFycm93LnNob3coKTtcclxuICAgIH1lbHNlIHtcclxuICAgICAgICB0aGlzLmxlZnRBcnJvdy5oaWRlKCk7XHJcbiAgICAgICAgdGhpcy5yaWdodEFycm93LmhpZGUoKTtcclxuICAgIH1cclxufTtcclxuLyoqXHJcbiAqIOW3puWPs+aMiemSrueahOebkeWQrOS6i+S7tlxyXG4gKi9cclxuQmFubmVyLnByb3RvdHlwZS5saXN0ZW5BcnJvd0NsaWNrPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5sZWZ0QXJyb3cuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmKHNlbGYuaW5kZXggPT09IDApe1xyXG4gICAgICAgICAgICBzZWxmLmJhbm5lclVsLmNzcyh7XCJsZWZ0XCI6IC1zZWxmLmJhbm5lcnVsV2lkdGggKiBzZWxmLmJhbm5lckNvdW50fSk7XHJcbiAgICAgICAgICAgIHNlbGYuaW5kZXggPSBzZWxmLmJhbm5lckNvdW50IC0gMTtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIHNlbGYuaW5kZXgtLTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc2VsZi5hbmltYXRlKCk7XHJcbiAgICB9KTtcclxuICAgIHNlbGYucmlnaHRBcnJvdy5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYoc2VsZi5pbmRleCA9PT0gKHNlbGYuYmFubmVyQ291bnQgKyAxKSl7XHJcbiAgICAgICAgICAgIHNlbGYuYmFubmVyVWwuY3NzKHtcImxlZnRcIjogLXNlbGYuYmFubmVydWxXaWR0aH0pO1xyXG4gICAgICAgICAgICBzZWxmLmluZGV4ID0gMjtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIHNlbGYuaW5kZXgrKztcclxuICAgICAgICB9XHJcbiAgICAgICAgc2VsZi5hbmltYXRlKCk7XHJcbiAgICB9KTtcclxufTtcclxuLyoqXHJcbiAqIOm8oOagh+aOp+WItui9ruaSreWbvlxyXG4gKi9cclxuQmFubmVyLnByb3RvdHlwZS5saXN0ZW5CYW5uZXJIb3ZlciA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB0aGlzLmJhbm5lckdyb3VwLmhvdmVyKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvL+esrOS4gOS4quWHveaVsOihqOekuuaKium8oOagh+aUvuWcqGJhbm5lckdyb3Vw5LiK6Z2i5Lya5omn6KGMXHJcbiAgICAgICAgY2xlYXJJbnRlcnZhbChzZWxmLnRpbWVyKTtcclxuICAgICAgICBzZWxmLnRvZ2dsZUFycm93KHRydWUpO1xyXG4gICAgfSwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAvL+esrOS6jOS4quWHveaVsOihqOekuuaKium8oOagh+S7jmJhbm5lckdyb3Vw5LiK6Z2i56e76LWw5Lya5omn6KGMXHJcbiAgICAgICAgc2VsZi5sb29wKCk7XHJcbiAgICAgICAgc2VsZi50b2dnbGVBcnJvdyhmYWxzZSk7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiDlvqrnjq/mkq3mlL7ova7mkq3lm75cclxuICovXHJcbkJhbm5lci5wcm90b3R5cGUubG9vcCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB0aGlzLnRpbWVyID0gIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZihzZWxmLmluZGV4ID49IChzZWxmLmJhbm5lckNvdW50ICsgMSkgKXtcclxuICAgICAgICAgICAgc2VsZi5iYW5uZXJVbC5jc3Moe1wibGVmdFwiOiAtc2VsZi5iYW5uZXJ1bFdpZHRofSk7XHJcbiAgICAgICAgICAgIHNlbGYuaW5kZXggPSAyO1xyXG4gICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgIHNlbGYuaW5kZXggKys7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNlbGYuYW5pbWF0ZSgpO1xyXG4gICAgfSwyMDAwKTtcclxufTtcclxuLyoqXHJcbiAqIOi/kOihjGxvb3BcclxuICovXHJcbkJhbm5lci5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdGhpcy5sb29wKCk7XHJcbiAgICB0aGlzLmxpc3RlbkJhbm5lckhvdmVyKCk7XHJcbiAgICB0aGlzLmxpc3RlbkFycm93Q2xpY2soKTtcclxuICAgIHRoaXMuaW5pdFBhZ2VDb250cm9sKCk7XHJcbiAgICB0aGlzLmluaXRCYW5uZXIoKTtcclxuICAgIHRoaXMubGlzdGVuUGFnZUNvbnRyb2woKTtcclxufTtcclxuXHJcblxyXG4kKGZ1bmN0aW9uICgpIHtcclxuICAgdmFyIGJhbm5lciA9IG5ldyBCYW5uZXIoKTtcclxuICAgYmFubmVyLnJ1bigpO1xyXG59KTsiXX0=
